# Default operating speed
defaultspeed=20.0

# distance in meters to automatically roll logs and stop application, this value must be negative to indicate
#  beyond the stop bar
dtsb.auto.stop=-50.0

# location of state file used by the apache web start to render glidepath state
dvi.statefile=/var/www/html/data/state.dat
#dvi.statefile=/opt/glidepath/state.dat

# maximumSpeed and crawlingSpeed are in mph
maximumSpeed=35
crawlingSpeed=5

# all accel limits are in m/s^2 (accel & decel limits must always be the same due to XGV implementation)
defaultAccel=2.0
# situation-specific accel limits
rampUpAccel=1.84
scenario2InitiateAccel=1.81
scenario3InitiateAccel=1.82
scenario2DepartureAccel=0.9
scenario3DepartureAccel=1.83

# maximumJerk is in m/s^3
maximumJerk=10.0
# periodicDelay is time step size in ms
periodicDelay=100
# sleep adjustment in ms, used to fiddle with end of cycle computations to help get cycles as close as possible to periodicDelay
sleep.adjustment=0
# missingDataThreshold identifies the number of consecutive read cycles with missing data that is considered a fault
missingDataThreshold=5
# uiRefresh - indicates in how many read cycles to go through before updating UI
uiRefresh=5
# slowLogging - indicates how many read cycles to go through before logging; not used at this time
slowLogging=30
autoStartConsumption=true
###### performancechecks turned off for testing only
performancechecks=true
#gps.host=172.24.0.29
# turner lab caddy 192.168.88.29
# turner lab glidepath 166.143.153.184 REMOTE
# turner lab glidepath 192.168.0.5 LOCAL
gps.host=192.168.0.5
#gps.host=166.143.153.184
gps.port=9501
gps.udpport=8123
asd.initialTimeout=20000
asd.operTimeout=100
asd.spatport=7788
asd.mapport=7789
asd.maxpacketsize=1472
# ead.trajectoryfile names a CSV file with trajectory data to read instead of using the algorithm
# if no file is specified (right of = is whitespace) then the EAD algorithm will be used
ead.trajectoryfile=/opt/glidepath/testdata/trajectory_step_7_20_12.csv
#ead.trajectoryfile=
# ead.librarylog controls separate logging from within libEAD.so. Options are: <empty string>, stdout, file
# if "file" is specified it will go to logs/EADlibLog.txt; if no string is specified, no logging will occur.
# concrete type of ITrajectory to instantiate, missing value defaults to simulated
ead.trajectoryclass=com.leidos.glidepath.ead.SimulatedTrajectory
#ead.trajectoryclass=com.leidos.glidepath.ead.Trajectory
# concrete type of IEad to use for modeling the EAD algorithm; missing value defaults to EadSimple
#ead.modelclass=com.leidos.glidepath.ead.EadUcrJava
ead.modelclass=com.leidos.glidepath.ead.EadUcrJava
ead.librarylog=file
ead.timebuffer=1.0
ead.maxerror=100.0
ead.osduration=2.0
# ead.cte.threshold is in cm; the CTE beyond which we stop trying to associate with a lane
ead.cte.threshold=1000
# ead.accelerationlimiter & jerklimiter: 0=turned off, 1=uses instantaneous speed data, 2=uses smoothed accel data
ead.accelerationlimiter=0
ead.jerklimiter=0
ead.rampup.limit=false
ead.start.distance=190
# ead.safety.dist specifies eqn to use: 0=original from white paper, 1=failsafe emergency dist
ead.safety.dist=1
ead.failsafe.on=false
ead.failsafe.distance.buffer=2.0
ead.failsafe.response.lag=1.8
# Vehicle control parameters
ead.maxcmdadj=3.0
ead.cmdaccelgain=0.17
ead.cmdspeedgain=0.0
ead.cmdbias=0.0
# the following ead.X params are for the EadDynamics model only
ead.Xtargetaccel=1.0
# XGV stuff
xgv.udpport=3794
xgv.timeout=20
xgv.softwarejausid=125941519
xgv.retrylimit=5
xgv.ipaddress=192.168.0.100
xgv.mpdjausid=10
xgv.vssjausid=42
xgv.motionprofileack=true
xgv.pdjausid=33
xgv.numframes=1
xgv.framedelay=200
xgv.instanceid=1
xgv.subsystemid=2
xgv.nodeid=1
xgv.inittimeout=3000
# consumer list...if auto start is true, these are automatically started
#     if auto start false, this list is available from consumers.html to manually test consumers
consumer.0=com.leidos.glidepath.dvi.simulated.testconsumers.TestGpsConsumer
consumer.1=com.leidos.glidepath.dvi.simulated.testconsumers.TestXgvConsumer
consumer.2=com.leidos.glidepath.dvi.simulated.testconsumers.TestAsdConsumer
consumer.3=com.leidos.glidepath.dvi.simulated.testconsumers.TestCanConsumer
#this debug flag is simply used to NOT validate the ultimate DataElementHolder returned from all consumers
#  this allows debugging/checking of a single consumer
debug=true
# full path to log file
log.path=/opt/glidepath/logs
# set min log level ERROR, WARN, INFO, DEBUG
log.level=DEBUG
log.stdout=true
spat.red=33
spat.yellow=3
spat.green=30
# mps value - determine motion status using this value on both sides of the current speed when comparing last speed
motion.status.smoothing=0.5
# number of elements to use in speed queue to calculate 'last speed'...avg over last second if 10Hz
motion.status.queue=10
# concrete type of IDataFilter, missing value defaults to NoFilter
datafilter=com.leidos.glidepath.filter.NoFilter
# indicates how many warning/statusMessages can accumulate within cycleMax before we forward to DVI
#   i.e. 3 within 20 cycles
cycleMax=20
cycleThreshold=3
# used when stopping, the last X speeds are kept in a queue, each must be zero to indicate STOPPED and EcoDrive
#  will be disengaged
exec.speed.queue=5
ucr.enable=false
ucr.port=10001
ucr.ipaddress=localhost
